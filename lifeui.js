// Generated by CoffeeScript 1.6.3
(function() {
  var LifeUI, global;

  LifeUI = {
    buildBoard: function(id) {
      var board, col, div, elem, row, x, y, _i, _j;
      board = {};
      elem = document.getElementById(id);
      for (y = _i = 50; _i >= -50; y = _i += -1) {
        row = document.createElement('tr');
        elem.appendChild(row);
        for (x = _j = -50; _j <= 50; x = _j += 1) {
          col = document.createElement('td');
          row.appendChild(col);
          div = document.createElement('div');
          col.appendChild(div);
          board[new Point(x, y)] = div;
        }
      }
      this.board = board;
      return this;
    },
    buildWorld: function(coords) {
      var world, x, y, _i, _len, _ref;
      world = new World;
      for (_i = 0, _len = coords.length; _i < _len; _i++) {
        _ref = coords[_i], x = _ref[0], y = _ref[1];
        world.pop.add(new Point(x, y));
      }
      this.world = world;
      return this;
    },
    showPop: function() {
      var _this = this;
      this.world.pop.each(function(p) {
        var div;
        div = _this.board[p];
        if (div) {
          return div.setAttribute('class', 'alive');
        }
      });
      return this;
    },
    hidePop: function() {
      var _this = this;
      this.world.pop.each(function(p) {
        var div;
        div = _this.board[p];
        if (div) {
          return div.removeAttribute('class');
        }
      });
      return this;
    },
    loopForever: function(timeout) {
      var _this = this;
      this.showPop();
      setTimeout(function() {
        _this.hidePop();
        _this.world.advance();
        return _this.loopForever(timeout);
      }, timeout);
      return this;
    }
  };

  global = typeof exports !== "undefined" && exports !== null ? exports : this;

  global.LifeUI = LifeUI;

}).call(this);

/*
//@ sourceMappingURL=lifeui.map
*/
